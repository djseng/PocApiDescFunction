name: Deploy DotNet project to Azure Function App

on:
  [push]

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'           # set this to the path to your function app project, defaults to the repository root
  AZURE_FUNCTIONAPP_RG: 'poc-apim-function-rg'  # set this to your function app resource group name on Azure
  AZURE_FUNCTIONAPP_NAME: 'poc-apim-function'   # set this to your function app name on Azure
  AZURE_APIM_RG: 'poc-apim-rg'                  # set this to your API Management resource group name on Azure
  AZURE_APIM_NAME: 'pocapi-apim'                # set this to your API Management service name on Azure
  AZURE_APIM_API_ID: 'hello-api'                # set this to your API Management API ID
  AZURE_APIM_API_DISPLAY_NAME: 'Hello API'      # set this to your API Management API display name
  AZURE_APIM_API_PATH: '/hello'                 # set this to your API Management API path
  DOTNET_VERSION: '8.0.x'                       # set this to the dotnet version to use (e.g. '2.1.x', '3.1.x', '5.0.x')

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: bash
      run: dotnet build --configuration Release --output ./output

    - name: Log into Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Deploy Azure Function App'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'

    - name: 'Update APIM ${{ env.AZURE_APIM_API_DISPLAY_NAME}}'
      uses: Azure/cli@v1
      env:
        subscriptionId: secrets.AZURE_SUBSCRIPTION_ID
        rg: env.AZURE_APIM_RG
        serviceName: env.AZURE_APIM_NAME
        apiId: env.AZURE_APIM_API_ID
        displayName: env.AZURE_APIM_API_DISPLAY_NAME
        apiPath: env.AZURE_APIM_API_PATH
        serviceUrl: "${{ steps.fa.outputs.app-url }}/api"
      with:
        
        azcliversion: latest
        inlineScript: |
          revisionsJson=$(az rest --method get --uri "https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$rg/providers/Microsoft.ApiManagement/service/$serviceName/apis/$apiId/revisions?api-version=2021-04-01-preview")
          latestRevision=$(echo $revisionsJson | jq '[.value[] | .apiRevision | tonumber] | max')
          nextRevision=$((latestRevision + 1))

          echo "Latest revision number is: $latestRevision; Next revision number should be: $nextRevision"

          az apim api import --resource-group $rg --service-name $serviceName --service-url $serviceUrl --api-id $apiId --display-name $displayName --path $apiPath --specification-path swagger.json --specification-format OpenApiJson --protocols 'https' --api-type http --api-revision $nextRevision
          az rest --method patch --uri "https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$rg/providers/Microsoft.ApiManagement/service/$serviceName/apis/$apiId;rev=$nextRevision?api-version=2021-04-01-preview" --body '{ "properties": { "isCurrent": true } }'